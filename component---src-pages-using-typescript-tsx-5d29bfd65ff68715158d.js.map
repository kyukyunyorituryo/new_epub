{"version":3,"file":"component---src-pages-using-typescript-tsx-5d29bfd65ff68715158d.js","mappings":"qNAaA,MA+BaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACDH,EAAA,OACCH,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,cAAe,oBACxDA,EAAAA,cAAA,UAAI,cAAe,gBAAaA,EAAAA,cAAA,UAAI,YAAa,UAEvDA,EAAAA,cAAA,SAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCmBX,IAzDeT,IAAoC,IAAnC,SAAEG,EAAQ,MAAEJ,EAAK,SAAEW,GAAUV,EAC3C,MACMW,EADW,eACER,EAASS,SAC5B,IAAIC,EAyCJ,OAtCEA,EADEF,EAEFd,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAAIiB,UAAU,gBACZjB,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAKV,IAEdF,EAAAA,cAAA,SAEJA,EAAAA,cAAA,KAAGU,KAAK,uCAAsC,UAAU,IACxDV,EAAAA,cAAA,KAAGU,KAAK,mDAAkD,iBAAiB,IAC3EV,EAAAA,cAAA,KAAGU,KAAK,+CAA8C,QAAQ,IAC9DV,EAAAA,cAAA,KAAGU,KAAK,yCAAwC,WAAW,MAC/DV,EAAAA,cAAA,SAAG,yCACHA,EAAAA,cAAA,SAAG,eAAYA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,YAAe,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,gBAAe,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,eAAc,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,WAAU,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,gBAAe,QACjPZ,EAAAA,cAAA,SAAG,eAAYA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,UAAS,MAAS,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,eAAc,UAAa,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,UAAS,OAClGZ,EAAAA,cAAA,SAAG,YAASA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,SAAQ,SAM3HZ,EAAAA,cAAAA,EAAAA,SAAA,KACFA,EAAAA,cAACW,EAAAA,KAAI,CAACM,UAAU,mBAAmBL,GAAG,KACnCV,GAEHF,EAAAA,cAAA,SACFA,EAAAA,cAAA,KAAGU,KAAK,uCAAsC,UAAU,IACxDV,EAAAA,cAAA,KAAGU,KAAK,mDAAkD,iBAAiB,IAC3EV,EAAAA,cAAA,KAAGU,KAAK,+CAA8C,QAAQ,IAC9DV,EAAAA,cAAA,KAAGU,KAAK,yCAAwC,WAAW,MAC/DV,EAAAA,cAAA,SAAG,yCAEHA,EAAAA,cAAA,SAAG,cAAWA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,YAAe,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,gBAAe,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,eAAc,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,aAAY,OAAU,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,WAAU,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,gBAAe,QAAcZ,EAAAA,cAAA,SAAG,eAAYA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,UAAS,MAAS,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,eAAc,UAAa,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,UAAS,OAChWZ,EAAAA,cAAA,SAAG,YAASA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,cAAa,QAAW,IAACZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,SAAQ,SAO/HZ,EAAAA,cAAA,OAAKiB,UAAU,iBAAiB,oBAAmBH,GACjDd,EAAAA,cAAA,UAAQiB,UAAU,iBAAiBD,GACnChB,EAAAA,cAAA,YAAOa,GACPb,EAAAA,cAAA,cAAQ,MACH,IAAIkB,MAAOC,cAAc,IAC3B,IACDnB,EAAAA,cAAA,KAAGU,KAAK,uCAAsC,qBAE5C,C,+CCJV,IA1CYP,IAAiD,IAADiB,EAAAC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAErB,EAAK,SAAEsB,EAAQ,SAAEX,GAAUV,EACrD,MAAM,KAAEK,IAASiB,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAef,EAAKmB,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGZ,EAAKmB,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBlB,MAClC2B,EAAYL,GAAYhB,EAAKmB,aAAaG,KAEhD,OACE9B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ4B,EAAe,GAAG1B,OAAW0B,IAAiB1B,GACtDF,EAAAA,cAAA,QAAM+B,KAAK,cAAcC,QAASN,IAClC1B,EAAAA,cAAA,QAAMiC,SAAS,WAAWD,QAAS9B,IACnCF,EAAAA,cAAA,QAAMiC,SAAS,iBAAiBD,QAASN,IACzC1B,EAAAA,cAAA,QAAMiC,SAAS,UAAUD,QAAQ,YACjChC,EAAAA,cAAA,QAAMiC,SAAS,WAAWD,QAASH,IACnC7B,EAAAA,cAAA,QAAM+B,KAAK,eAAeC,QAAQ,YAClChC,EAAAA,cAAA,QACE+B,KAAK,kBACLC,SAA0B,QAAjBX,EAAAb,EAAKmB,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBa,cAAM,IAAAZ,OAAR,EAAjBA,EAA2Ba,UAAW,KAEjDnC,EAAAA,cAAA,QAAM+B,KAAK,gBAAgBC,QAAS9B,IACpCF,EAAAA,cAAA,QAAM+B,KAAK,sBAAsBC,QAASN,IAC1C1B,EAAAA,cAAA,QAAM+B,KAAK,gBAAgBC,QAASH,IACnChB,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n    <>\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n        <p>\r\n          \r\n    <a href=\"https://kyukyunyorituryo.github.io/\">サイトトップ</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/kindle_sale/\">kindleセールチェック</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/new_pub/\">紙の新刊</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/i/\"> 電書ニュース</a>  </p>\r\n<p>amazonで売られているKindle本の新刊を一覧で表示するサイトです。</p>\r\n<p>出版社ごとのセール一覧：<Link to=\"/kadokawa\">KADOKAWA</Link>、<Link to=\"/kodansha\">講談社</Link>、<Link to=\"/akitashoten\">秋田書店</Link>、<Link to=\"/hakusensha\">白泉社</Link>、<Link to=\"/shueisha\">集英社</Link>、<Link to=\"/tokuma\">徳間書店</Link>、<Link to=\"/shougakukan\">小学館</Link></p>\r\n<p>カテゴリごとの新刊一覧：<Link to=\"/manga\">漫画</Link>、<Link to=\"/lightnovel\">ライトノベル</Link>、<Link to=\"/novel\">小説</Link></p>\r\n<p>発売日ごとの一覧：<Link to=\"/lastmonth\">先月発売</Link>、<Link to=\"/thismonth\">今月発売</Link>、<Link to=\"/nextmonth\">来月発売</Link>、<Link to=\"/list\">全一覧</Link></p>\r\n\r\n      </>\r\n    )\r\n  } else {\r\n    header = (\r\n        <>\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n      <p>\r\n    <a href=\"https://kyukyunyorituryo.github.io/\">サイトトップ</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/kindle_sale/\">kindleセールチェック</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/new_pub/\">紙の新刊</a>、\r\n    <a href=\"https://kyukyunyorituryo.github.io/i/\"> 電書ニュース</a>  </p>\r\n<p>amazonで売られているKindle本の新刊を一覧で表示するサイトです。</p>\r\n\r\n<p>出版社ごとの新刊一覧：<Link to=\"/kadokawa\">KADOKAWA</Link>、<Link to=\"/kodansha\">講談社</Link>、<Link to=\"/akitashoten\">秋田書店</Link>、<Link to=\"/hakusensha\">白泉社</Link>、<Link to=\"/shueisha\">集英社</Link>、<Link to=\"/tokuma\">徳間書店</Link>、<Link to=\"/shougakukan\">小学館</Link></p><p>カテゴリごとの新刊一覧：<Link to=\"/manga\">漫画</Link>、<Link to=\"/lightnovel\">ライトノベル</Link>、<Link to=\"/novel\">小説</Link></p>\r\n<p>発売日ごとの一覧：<Link to=\"/lastmonth\">先月発売</Link>、<Link to=\"/thismonth\">今月発売</Link>、<Link to=\"/nextmonth\">来月発売</Link>、<Link to=\"/list\">全一覧</Link></p>\r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        © {new Date().getFullYear()},\r\n        {` `}\r\n        <a href=\"https://github.com/kyukyunyorituryo\">kyukyunyorituryo</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, ogpimage, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n  const metaImage = ogpimage || site.siteMetadata.icon\r\n  \r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:image\" content={metaImage} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      <meta name=\"twitter:image\" content={metaImage} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","children","isRootPath","pathname","header","className","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","ogpimage","useStaticQuery","metaDescription","siteMetadata","defaultTitle","metaImage","icon","name","content","property","social","twitter"],"sourceRoot":""}